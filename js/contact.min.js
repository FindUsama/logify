"use strict";
document.body.classList.add("contact"),
    function() {
        function e() {
            FormUtils(n, l, s), FormUtils.bindEvents(n), t(), m = honey(document.querySelector(a.form))
        }

        function t() {
            var e, t = document.getElementsByClassName("contact-form");
            if (!t || !t.length) return !0;
            e = document.getElementsByClassName("contact-form-submit-button")[0], t[0].addEventListener("submit", function(t) {
                var r, a, o, i, s;
                if (t.preventDefault(), !FormUtils.validateAll(n) || !m.valid()) return void window.scrollTo({
                    top: 0,
                    left: 0
                });
                r = new XMLHttpRequest, a = t.target, o = a.action, i = a.elements, e.classList.add("disabled"), 
                // e.value = "Sending...",
                 r.onreadystatechange = function() {
                    4 !== r.readyState || 200 !== r.status && 0 !== r.status || (FormUtils.resetFormErrors(n), e.value = "Done!", window.location.replace("/contact/exit/success/"))
                }, s = [].filter.call(i, function(e) {
                    return "radio" !== e.type || e.checked
                }).filter(function(e) {
                    return "SELECT" === e.nodeName ? (e.name = e.options[e.selectedIndex].getAttribute("name"), !!e.name) : !!e.name || !!e.value
                }).map(function(e) {
                    return encodeURIComponent(e.name) + "=" + encodeURIComponent(e.value)
                }).join("&"), r.open("POST", o), r.setRequestHeader("Content-type", "application/x-www-form-urlencoded"), r.send(s)
            })
        }
        var n, r, a, o, i, s, l, m = {},
            c = window.onload;
        window.onload = function(t) {
            c(), e(), console.log("booting contact form")
        }, n = "contactForm", r = RegExp(/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/), a = {
            email: "#drip-email",
            firstName: "#drip-first-name",
            lastName: "#drip-last-name",
            phone: "#drip-phone-general",
            design: "#service-design",
            designChk: "#drip-service-design",
            engineering: "#service-engineering",
            engineeringChk: "#drip-service-engineering",
            marketing: "#service-marketing",
            marketingChk: "#drip-service-marketing",
            management: "#service-management",
            managementChk: "#drip-service-project-management",
            form: ".form.contact-form form"
        }, o = {
            email: "#emailError",
            firstName: "#firstNError",
            lastName: "#lastNError",
            phone: "#phoneError"
        }, i = {
            email: "Email is invalid.",
            firstName: "Please enter a first name.",
            lastName: "Please enter a last name.",
            phone: "Phone number is not valid."
        }, s = [{
            selector: a.email,
            event: "blur",
            func: function(e) {
                FormUtils.validateOne(n, a.email)
            }
        }, {
            selector: a.firstName,
            event: "blur",
            func: function(e) {
                FormUtils.validateOne(n, a.firstName)
            }
        }, {
            selector: a.lastName,
            event: "blur",
            func: function(e) {
                FormUtils.validateOne(n, a.lastName)
            }
        }, {
            selector: a.phone,
            event: "blur",
            func: function(e) {
                FormUtils.validateOne(n, a.phone)
            }
        }], l = [{
            selector: a.email,
            validator: function(e) {
                return r.test(e.value)
            },
            errorSelector: o.email,
            errorMessage: i.email
        }, {
            selector: a.firstName,
            validator: function(e) {
                return "" !== e.value
            },
            errorSelector: o.firstName,
            errorMessage: i.firstName
        }, {
            selector: a.lastName,
            validator: function(e) {
                return "" !== e.value
            },
            errorSelector: o.lastName,
            errorMessage: i.lastName
        }, {
            selector: a.phone,
            validator: function(e) {
                return e.value.match(/\d/g) && e.value.match(/\d/g).length > 8
            },
            errorSelector: o.phone,
            errorMessage: i.phone
        }]
    }();